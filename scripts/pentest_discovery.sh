#!/bin/bash
# pentest_discovery.sh - Phase de dÃ©couverte pour pentesting automatisÃ©
set -euo pipefail

if ! command -v nmap >/dev/null 2>&1; then
    echo "Erreur: nmap n'est pas installÃ©." >&2
    exit 1
fi

# Fichier contenant la liste des cibles (une adresse IP ou domaine par ligne)
TARGET_LIST="targets.txt"
# Dossier de sortie pour les rÃ©sultats (timestamp par dÃ©faut)
OUTPUT_DIR="pentest_results_$(date +%Y%m%d_%H%M%S)"
LATEST_LINK="pentest_results_latest"

usage() {
    echo "Usage: $0 [-t targets.txt] [-o output_dir]" >&2
}

while getopts "t:o:h" opt; do
    case $opt in
        t) TARGET_LIST="$OPTARG";;
        o) OUTPUT_DIR="$OPTARG";;
        h) usage; exit 0;;
        *) usage; exit 1;;
    esac
done

mkdir -p "$OUTPUT_DIR"
ln -sfn "$OUTPUT_DIR" "$LATEST_LINK"

# Options Nmap pour collecter un maximum d'informations utiles aux
# vÃ©rifications de failles : scripts par dÃ©faut, dÃ©tection de version,
# dÃ©tection d'OS et scripts de vulnÃ©rabilitÃ©s
NMAP_OPTS="-sC -sV -O --script vuln"

if [[ ! -f "$TARGET_LIST" ]]; then
    echo "Fichier $TARGET_LIST introuvable" >&2
    exit 1
fi

if [[ $EUID -ne 0 ]]; then
    echo "[!] Ce script devrait Ãªtre exÃ©cutÃ© en tant que root pour l'analyse OS" >&2
fi

while IFS= read -r target; do
    [[ -z "$target" ]] && continue
    echo "[+] Scan complet de $target"
    nmap $NMAP_OPTS -oX "$OUTPUT_DIR/${target}_discovery.xml" "$target"
done < "$TARGET_LIST"

echo "ðŸ“„ RÃ©sultats enregistrÃ©s dans $OUTPUT_DIR/"
